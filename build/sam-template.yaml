# SAM template
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Python Lambda using container image

Parameters:
  EcrImageUri:
    Type: String
  StravaClientId:
    Type: String
  StravaClientSecret:
    Type: String

Resources:
  StravaCharts:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri: !Ref EcrImageUri
      Timeout: 60
      Environment:
        Variables:
          STRAVA_CLIENT_ID: !Ref StravaClientId
          STRAVA_CLIENT_SECRET: !Ref StravaClientSecret
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            Path: $default
            Method: ANY
            ApiId: !Ref HttpApi
    Metadata:
      Dockerfile: build/Dockerfile
      DockerContext: ../
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Domain:
        DomainName: stravacharts.3thirty.space
        CertificateArn: arn:aws:acm:us-east-1:474427206130:certificate/90856c0d-d884-44e4-b8c6-5026a5bb8a5f
        Route53:
          HostedZoneName: 3thirty.space.

  LandingPageBucket:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  LandingPageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LandingPageBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "${LandingPageBucket.Arn}/*"
