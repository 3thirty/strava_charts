AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Lambda + API Gateway + Route53 setup

Parameters:
  EcrImageUri:
    Type: String
  StravaClientId:
    Type: String
  StravaClientSecret:
    Type: String

Resources:
  StravaCharts:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageUri: !Ref EcrImageUri
      Timeout: 60
      Environment:
        Variables:
          STRAVA_CLIENT_ID: !Ref StravaClientId
          STRAVA_CLIENT_SECRET: !Ref StravaClientSecret
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            Path: $default
            Method: ANY
            ApiId: !Ref HttpApi
    Metadata:
      Dockerfile: build/Dockerfile
      DockerContext: ../

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: "$default"
      Domain:
        DomainName: stravacharts.3thirty.space
        CertificateArn: arn:aws:acm:us-east-1:474427206130:certificate/90856c0d-d884-44e4-b8c6-5026a5bb8a5f
        Route53:
          HostedZoneId: Z006216215GRAV7GOXJLF
          RecordSetName: stravacharts.3thirty.space
          RecordType: A
      DefinitionBody:
        openapi: "3.0.1"
        info:
          title: "strava-test-2"
          version: "2025-04-25 20:13:13UTC"
        servers:
        - url: "https://stravacharts.3thirty.space/{basePath}"
          variables:
            basePath:
              default: ""
        paths:
          /$default:
            x-amazon-apigateway-any-method:
              isDefaultRoute: true
              x-amazon-apigateway-integration:
                payloadFormatVersion: "2.0"
                type: "aws_proxy"
                httpMethod: "POST"
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StravaCharts.Arn}/invocations"
                connectionType: "INTERNET"
          /:
            x-amazon-apigateway-any-method:
              responses:
                default:
                  description: "Default response for ANY /"
              x-amazon-apigateway-integration:
                payloadFormatVersion: "1.0"
                type: "http_proxy"
                httpMethod: "GET"
                uri: !Sub "http://${LandingPageBucket}.s3-website-${AWS::Region}.amazonaws.com/"
                connectionType: "INTERNET"
        x-amazon-apigateway-importexport-version: "1.0"

  LandingPageBucket:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  LandingPageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LandingPageBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${LandingPageBucket}/*"

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
